# -*- coding: utf-8 -*-
"""ML Music - Youtube - Training Data Preparation

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eW4MV_r6_-E-W4iuEeZnEWhqTe7retOz

## Setup
"""

#%%capture

# https://pytube.io/en/latest/index.html
# https://librosa.org/doc/main/generated/librosa.feature.mfcc.html
# https://pysoundfile.readthedocs.io/en/latest/#module-soundfile

#!pip install pytube librosa soundfile

import warnings

warnings.filterwarnings("ignore")

#!pip list

"""### Google Drive"""

from google.colab import drive

drive.mount('/content/drive')

import os

# you might need to update the path below, or create a shortcut to the path below
DATASET_PATH = '/content/drive/MyDrive/Research/DS Research Shared 2023/data/ml_music_2023'

print(DATASET_PATH)
assert os.path.isdir(DATASET_PATH)

CHANNELS_DIRPATH = os.path.join(DATASET_PATH, "youtube_channels")
channel_names = os.listdir(CHANNELS_DIRPATH)
print(channel_names)

"""## Compiling Audio Features (MFCCs)"""

from pandas import read_csv, DataFrame, Series

#NUMS_MFCC = [2, 3, 12, 20]
N_MFCC = 3
print("N MFCC:", N_MFCC)

rows = []

for channel_name in channel_names:
    print(channel_name.upper())

    channel_dirpath = os.path.join(CHANNELS_DIRPATH, channel_name)
    video_ids = os.listdir(channel_dirpath)
    print(len(video_ids), "VIDEOS...")
    
    for video_id in video_ids:
        #print(video_id)
        video_dirpath = os.path.join(channel_dirpath, video_id)
        mfcc_dirpath = os.path.join(video_dirpath, f"mfcc_{N_MFCC}")

        for track_filename in os.listdir(mfcc_dirpath):
            row = {
                "channel_name": channel_name,
                "video_id": video_id,
                "track_name": track_filename.split(".csv")[0]
            }

            track_filepath = os.path.join(mfcc_dirpath, track_filename)    
            mfcc_df = read_csv(track_filepath)
            mfcc_df.drop(columns=["Unnamed: 0"], inplace=True)
            
            for mfcc_colname in mfcc_df.columns.tolist():
                track_mfcc = mfcc_df[mfcc_colname]
                row[f"{mfcc_colname}_mean"] = track_mfcc.mean()
                row[f"{mfcc_colname}_var"] = track_mfcc.std()

            rows.append(row)

all_tracks_df = DataFrame(rows)
csv_filepath = os.path.join(DATASET_PATH, f"30s_features_mfcc_{N_MFCC}.csv")
all_tracks_df.to_csv(csv_filepath)
all_tracks_df

csv_filepath = os.path.join(DATASET_PATH, "30s_features_mfcc_20.csv")

all_tracks_df.to_csv(csv_filepath)

"""## Scratch Work"""

from pandas import read_csv


channel_name = "maggie_rogers"
video_id = "0dzZXpf7sSQ"
track_filename = "track_1.csv"
track_filepath = f"/content/drive/MyDrive/Research/DS Research Shared 2023/data/ml_music_2023/youtube_channels/{channel_name}/{video_id}/mfcc_20/{track_filename}"

mfcc_df = read_csv(track_filepath)
mfcc_df.drop(columns=["Unnamed: 0"], inplace=True)
print(mfcc_df.shape)
mfcc_df.head()

mfcc_df["mfcc_1"].mean()

#@title
#from pandas import DataFrame
#
## there is probably a way to manipulate the df but let's loop for now
#
#
#
#results = []
#for mfcc_colname in mfcc_df.columns.tolist():
#    mfcc = mfcc_df[mfcc_colname]
#
#    result = {
#        "channel_name": channel_name,
#        "video_id": video_id,
#        "track_name": track_filename.split(".csv")[0],
#        f"{mfcc_colname}_mean": mfcc.mean(), 
#        #f"{mfcc_colname}_std": mfcc.std(), 
#        f"{mfcc_colname}_var": mfcc.var(), 
#    }
#    print(result)
#    results.append(result)
#
#
#mfcc_summary_df = DataFrame(results)
#print(mfcc_summary_df.shape)
#mfcc_summary_df.head()
##  4. Save one CSV file of all tracks summary data, "tracks_mfcc_12_summary.csv", to the "youtube_channels" directory.

from pandas import DataFrame, Series

# we want a single dictionary with all the mfcc summaries

row = {"channel_name": channel_name,
        "video_id": video_id,
        "track_name": track_filename.split(".csv")[0]}
        
for mfcc_colname in mfcc_df.columns.tolist():
    mfcc = mfcc_df[mfcc_colname]
    row[f"{mfcc_colname}_mean"] = mfcc.mean()
    row[f"{mfcc_colname}_var"] = mfcc.std()

row

#mfcc_dirpath = os.path.join(CHANNELS_DIRPATH, "maggie_rogers", "0dzZXpf7sSQ", "mfcc_20")
#
#for track_filename in os.listdir(mfcc_dirpath):
#    print(track_filename)
#    track_filepath = os.path.join(mfcc_dirpath, track_filename)
#    print(track_filepath)
#    track_df = read_csv(track_filepath)
#    print(track_df.head())













